	웹 애플리케이션 모델
		웹 애플리케이션 개발은 일반적으로 많이 사용하는 표준화 소스 구조를 만들어 개발을 진행
		이러한 표준화된 소스 구조가 웹 애플리케이션 모델
		웹 애플리케이션 모델의 종류에는 모델1과 모델2 방식
		
	모델1 방식
		데이터베이스 연동 같은 비즈니스 로직 작업과 
		그 작업 결과를 나타내주는 작업을 동일한 JSP에서 수행.
		즉, 모든 클라이언트의 요청과 비즈니스 로직 처리를 JSP가 담당하는 구조.
		
		모델1 방식은 기능 구현이 쉽고 편리하다라는 장점이 있는 반면에 
		웹 사이트 화면 기능이 복잡해지면 화면 기능과 비즈니스 로직 기능이 섞이면서 
		유지보수에 문제가 발생.
		
		디자이너가 빈번하게 수정하려면 
		JSP에 개발자가 관계되는 비즈니스 로직 기능도 알아야 하므로 작업하기가 쉽지 않을 뿐 아니라 
		비즈니스 로직과 화면 기능이 섞여 코드 재사용성도 비효율.
	
	
	모델2 방식
		모델2 방식의 핵심은 
		웹 애플리케이션의 각 기능(클라이언트의 요청 처리, 응답 처리, 비즈니스, 로직 처리)을 
		분리해서 구현하자는 것.
		객체 지향 프로그래밍에서 각각의 기능을 모듈화해서 개발하자는 것과 같은 원리.
		
		웹 프로그램 개발 시 
		개발자가 전체 기능을 몰라도 각 기능이 모듈화되어 있으므로 자신이 맡은 부분만 개발.
		각 부분을 조립만 하면 나중에 전체를 사용할 수 있어 개발 효율성 증가.
		
		모델2 방식으로 개발하기 위해서는 필요한 기술이나 개념을 숙지해야 하는 번거로움은 있지만 
		초급자라면 우선 자신이 맡은 부분만 개발하면 되므로 훨씬 효율적인 개발 방식.
		
		개발 후 
		서비스를 제공할 때도 유지보수가 편할 뿐만 아니라 
		개발한 모듈들은 비슷한 프로그램을 만들 때 사용할 수 있어 
		코드 재사용성이 높다.
		
		
	모델2 방식의 특징
		• 각 기능이 서로 분리되어 있어 개발 및 유지보수가 용이.
		• 각 기능(모듈)의 재사용성이 높다.
		• 디자이너와 개발자의 작업을 분업화해서 쉽게 개발할 수 있다.
		• 모델2 방식과 관련된 기능이나 개념의 학습이 필요.
		
		
		
	
	