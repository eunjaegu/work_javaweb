	MVC를 이용한 회원 관리
	
		MVC 방식으로 브라우저의 요청은 서블릿이 맡고, 
		비즈니스 처리는 모델이 맡고, 
		화면은 JSP가 맡는 방식으로 회원 관리 기능을 다시 구현.
		
	
	회원 정보 조회 기능 구현
		1. 브라우저에서 /mem.do로 요청.
		2. 서블릿 MemberController가 요청을 받아 MemberDAO의 listMembers() 메서드를 호출.
		3. MemberDAO의 listMembers() 메서드에서 SQL문으로 회원 정보를 조회한 후
		   회원 정보를 MemberVO에 설정하여 반환.
		4. 다시 MemberController에서는 조회한 회원 정보를 회원 목록창(listMembers.jsp)으로 포워딩.
		5. 회원 목록창(listMembers.jsp)에서 포워딩한 회원 정보를 목록으로 출력.
		
	
	컨트롤러 역할을 하는 서블릿인 MemberController 클래스 
		작업 내용
		1. init() 메서드에서 MemberDAO 객체를 초기화
		2. MemberDAO의 listMembers() 메서드를 호출하여 회원 정보를 ArrayList로 반환
		3. request에 조회한 회원 정보를 membersList 속성 이름으로 바인딩
		4. RequestDispatcher 클래스를 이용해 회원 목록창(listMembers.jsp)으로 포워딩.
		
		주요 코드
		1. MemberDAO를 생성.
		2. 요청에 대해 회원 정보를 조회.
		3. 조회한 회원 정보를 request에 바인딩.
		4. 컨트롤러에서 표시하고자 하는 JSP로 포워딩.

	MemberDAO 클래스
		1. istMembers() 메서드 호출 시 SQL문을 이용해 회원 정보를 조회한 후,
		2. 결과를 ArrayList로 반환
		
		주요 코드
		1. SQL문을 작성.
		2. PrepareStatement 객체를 생성하면서 SQL문을 인자로 전달.
		3. 조회한 회원 정보를 레코드별로 MemberVO 객체의 속성에 저장.
		4. membersList에 MemberVO 객체들을 차례대로 저장.
		5. PrepareStatement 객체를 생성하면서 SQL문을 인자로 전달.
		6. SQL문을 실행.
		
		
	MemberVO 클래스
		인자 네 개를 갖는 생성자와 인자 다섯 개를 갖는 생성자
		
		
	listMembers.jsp
		바인딩된 회원 정보를 차례대로 표시
		
	
	http://localhost:8090/pro17/mem.do로 요청하여 실행 결과를 확인